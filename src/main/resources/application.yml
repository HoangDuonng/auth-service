spring:
  application:
    name: auth-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/db-auth}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:123456}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    change-log: ${CHANGE_LOG:classpath:db/changelog/db.changelog-master.xml}
    enabled: true
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      mandatory: true
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2.0
        default-requeue-rejected: false
        auto-startup: true
        concurrency: 1
        max-concurrency: 1
        prefetch: 1

rabbitmq:
  queue:
    user-created-auth: user-created-auth-queue
    auth-login: auth-login-queue
    auth-login-response: auth-login-response-queue
  exchange:
    user-events: user-events-exchange
    auth-events: auth-events-exchange
  routing-key:
    user-created-auth: user.created.auth
    auth-login: auth.login
    auth-login-response: auth.login.response

jwt:
  secret: ${JWT_SECRET:7mCfe6wr7rOBhY6S3vrWyR8dBXFy9iTOmbjlREl0yxASqKgpzKfIl0CGpGjMVuL/O++QZGIBwGQNzyphuN8yyqIbacdY+7n+6KZTY3xQdh16C8Kdzjt01mg6tKywGgaNTG1nLUhQVUb/INOIkqMIk4lVXyTbnGU9RFWCxYvQbHN2/BcaOUQm/SM0Fb6nk96JQZoavlrUqCGyEyoCXXTATjW7bnkEbp5mP3w9p+MvRED5nkGMC7LvMwfag8rOFvTCPcsqjgE+Y/MLfqTJprQpn2nbcMAj2AQAUbtPIY1UXe37IVA2qy/fzs5urnspX37fb6W7bnhIBn4hA6zudvQ==}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
  refresh-token:
    expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:604800000} # 7 days in milliseconds
  key-id: ${JWT_KEY_ID:auth-key-id}
  issuer: ${JWT_ISSUER:auth-key-id}

server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /api

logging:
  level:
    root: ${LOG_LEVEL:INFO}
    com.graduationproject: ${LOG_LEVEL:DEBUG}
    org.springframework: INFO
    org.hibernate: INFO
    org.springframework.amqp: ${LOG_LEVEL:DEBUG}
    com.rabbitmq: DEBUG
  file:
    name: logs/auth-service.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 5
      total-size-cap: 1GB
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

user-service:
  url: ${USER_SERVICE_URL:http://localhost:8080}

authorization-service:
  url: ${AUTHORIZATION_SERVICE_URL:http://localhost:8082}

---
spring:
  config:
    activate:
      on-profile: dev
  liquibase:
    parameters:
      secureParsing: false
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
---
spring:
  config:
    activate:
      on-profile: prod
  liquibase:
    parameters:
      secureParsing: true
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
